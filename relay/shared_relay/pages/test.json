{
  "page": "Settings: Page Example",
  "components": [
    {
      "type": "interrupt",
      "_info": "The 'actions' set all preferences 'preference' to 'value'",
      "name": "Interrupt Script",
      "__cssInfo": "If `css` provided (No underscore), this basically does `style=css` on top of the css it does already to the <input> button",
      "_css": "border-radius: 0px; filter: hue-rotate(120deg); max-width: 20%",
      "notification": "Your script has been interrupted!",
      "actions": [
        {
          "preference": "script_interrupt",
          "value": "true"
        },
        {
          "preference": "garbo_interrupt",
          "value": "true"
        },
        {
          "preference": "rudely_interrupt",
          "value": "true"
        },
        {
          "preference": "kindly_interrupt",
          "value": "false"
        }
      ]
    },
    {
      "type": "html",
      "data": "<p>This is a demostration page of how a settings thingy can be setup</p><p>Please note that this setting accepts literal html, not just plain text. So you cannot use <b>brackets</b> without html encoding them...</p>"
    },
    {
      "preference": "myBooleanPreference",
      "name": "Boolean Setting Name",
      "description": "An example of a boolean preference. If default is omitted, then it defaults to true",
      "default": "true",
      "type": "boolean",
      "validate": "(v, obj) => obj['myStringPreference'] != 'cat'",
      "invalidReason": "I smell a cat! This setting is allergic to cats!"
    },
    {
      "preference": "myStringPreference",
      "name": "String Setting Name",
      "description": "An example of a string preference, will also default to this if 'type' is invalid or missing. We also use 'validate' here, try typing in 'cat'",
      "default": "",
      "type": "string",
      "validate": "(v) => v != 'cat'",
      "invalidReason": "This is a cat free zone!"
    },
    {
      "type": "html",
      "data": "Now some dropdown stuff! <b>This is also a divider or something</b>"
    },
    {
      "type": "html",
      "data": "<hr><img src='https://i.imgur.com/8fgFk4S.png' />"
    },
    {
      "preference": "myDropdownPreference",
      "name": "Dropdown Setting Name",
      "description": "An example of a dropdown preference",
      "default": "If this is not in the dropdown values, or missing. Will default to the first dropdown entry.",
      "type": "dropdown",
      "dropdown": [
        {
          "display": "Not set",
          "value": ""
        },
        {
          "display": "Attack Everyone",
          "value": "attack"
        },
        {
          "display": "Run Away",
          "value": "run"
        },
        {
          "display": "Do a dance",
          "value": "dance"
        }
      ]
    },
    {
      "preference": "myDropdownPreference2",
      "name": "Dropdown Setting Name2",
      "description": "An example of a dropdown preference autofilled with mafia's phylums",
      "__info": "This is a dropdown pref that has been filled, the setting is executed as javascript and expects a [string, string][] output as [display, value][]. The filler is appended to the existing entries.",
      "type": "dropdown",
      "dropdownFiller": "require('kolmafia').Phylum.all().map(i => [i.toString(), i.toString()])",
      "dropdown": [
        {
          "display": "Not set",
          "value": ""
        }
      ]
    },
    {
      "preference": "myDropdownPreference3",
      "name": "Dropdown Setting Name3",
      "description": "An example of a dropdown preference that can be provided simplified values",
      "type": "dropdown",
      "dropdown": ["Not Set", "Destroy Humans", "Save Whales"]
    },
    {
      "type": "interrupt",
      "_info": "The 'actions' set all preferences 'preference' to 'value'",
      "name": "Destroy Humanity",
      "__cssInfo": "If `css` provided (No underscore), this basically does `style=css` on top of the css it does already to the <input> button",
      "css": "border-radius: 0px; filter: hue-rotate(120deg); max-width: 20%",
      "notification": "ALL HUMANS MUST DIE!",
      "actions": [
        {
          "preference": "script_interrupt",
          "value": "true"
        },
        {
          "preference": "brutally_interrupt",
          "value": "true"
        },
        {
          "preference": "rudely_interrupt",
          "value": "true"
        },
        {
          "preference": "kindly_interrupt",
          "value": "false"
        }
      ]
    }
  ]
}
